security:
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        login:
            pattern:  ^/api/login
            stateless: true
            user_checker: App\Security\LoginUserChecker
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        settings:
            pattern:  ^/api/settings
            security: false
        deliveryTypes:
            pattern:  ^/api/delivery-types
            security: false
        customerImport:
            pattern:  ^/api/customers/import
            security: false
        api:
            pattern:   ^/api
            stateless: true
            user_checker: App\Security\LoginUserChecker
            jwt: ~
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
    password_hashers:
        # auto hasher with default options for the User class (and children)
        App\Entity\User: 'auto'

        # auto hasher with custom options for all PasswordAuthenticatedUserInterface instances
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'auto'
            cost:      15